/* Generated By:JavaCC: Do not edit this line. JavaParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JavaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PUBLIC = 8;
  /** RegularExpression Id. */
  int PRIVATE = 9;
  /** RegularExpression Id. */
  int PROTECTED = 10;
  /** RegularExpression Id. */
  int STATIC = 11;
  /** RegularExpression Id. */
  int CLASS = 12;
  /** RegularExpression Id. */
  int VOID = 13;
  /** RegularExpression Id. */
  int MAIN = 14;
  /** RegularExpression Id. */
  int NEW = 15;
  /** RegularExpression Id. */
  int IF = 16;
  /** RegularExpression Id. */
  int ELSE = 17;
  /** RegularExpression Id. */
  int RETURN = 18;
  /** RegularExpression Id. */
  int EXTENDS = 19;
  /** RegularExpression Id. */
  int IMPLEMENTS = 20;
  /** RegularExpression Id. */
  int INT = 21;
  /** RegularExpression Id. */
  int STRING = 22;
  /** RegularExpression Id. */
  int BOOLEAN = 23;
  /** RegularExpression Id. */
  int SYSTEM = 24;
  /** RegularExpression Id. */
  int OUT = 25;
  /** RegularExpression Id. */
  int PRINTLN = 26;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 27;
  /** RegularExpression Id. */
  int STRING_LITERAL = 28;
  /** RegularExpression Id. */
  int IDENTIFIER = 29;
  /** RegularExpression Id. */
  int PLUS = 30;
  /** RegularExpression Id. */
  int MINUS = 31;
  /** RegularExpression Id. */
  int MULTIPLY = 32;
  /** RegularExpression Id. */
  int DIVIDE = 33;
  /** RegularExpression Id. */
  int GT = 34;
  /** RegularExpression Id. */
  int LT = 35;
  /** RegularExpression Id. */
  int GE = 36;
  /** RegularExpression Id. */
  int LE = 37;
  /** RegularExpression Id. */
  int EQ = 38;
  /** RegularExpression Id. */
  int NE = 39;
  /** RegularExpression Id. */
  int ASSIGN = 40;
  /** RegularExpression Id. */
  int SEMICOLON = 41;
  /** RegularExpression Id. */
  int DOT = 42;
  /** RegularExpression Id. */
  int COMMA = 43;
  /** RegularExpression Id. */
  int LPAREN = 44;
  /** RegularExpression Id. */
  int RPAREN = 45;
  /** RegularExpression Id. */
  int LBRACE = 46;
  /** RegularExpression Id. */
  int RBRACE = 47;
  /** RegularExpression Id. */
  int LBRACKET = 48;
  /** RegularExpression Id. */
  int RBRACKET = 49;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"public\"",
    "\"private\"",
    "\"protected\"",
    "\"static\"",
    "\"class\"",
    "\"void\"",
    "\"main\"",
    "\"new\"",
    "\"if\"",
    "\"else\"",
    "\"return\"",
    "\"extends\"",
    "\"implements\"",
    "\"int\"",
    "\"String\"",
    "\"boolean\"",
    "\"System\"",
    "\"out\"",
    "\"println\"",
    "<INTEGER_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"==\"",
    "\"!=\"",
    "\"=\"",
    "\";\"",
    "\".\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
  };

}
